#!/bin/sh

# Gearman worker manager

### BEGIN INIT INFO
# Provides:          gearman-manager
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable gearman manager daemon
### END INIT INFO

##PATH##
DAEMON=<%= @daemon %>
PIDDIR=<%= @pid_dir %>
PIDFILE=${PIDDIR}/gearman-manager.pid
CONFIGFILE=<%= @config_file %>
WORKERCLASS='<%= @worker_class %>'

GEARMANUSER="gearman"
LOGFILE=syslog
PARAMS=""

test -x ${DAEMON} || exit 0

. /lib/lsb/init-functions

start()
{
  log_daemon_msg "Starting Gearman Manager"
  if ! test -d ${PIDDIR}
  then
    mkdir ${PIDDIR}
    chown ${GEARMANUSER} ${PIDDIR}
  fi
  if start-stop-daemon \
    --start \
    --startas $DAEMON \
    --pidfile $PIDFILE \
    -- -P $PIDFILE \
       -l $LOGFILE \
       -u $GEARMANUSER \
       -d -vvv -p $WORKERCLASS \
       -c $CONFIGFILE \
       $PARAMS
  then
    log_end_msg 0
  else
    log_end_msg 1
    log_warning_msg "Please take a look at the syslog"
    exit 1
  fi
}

stop()
{
  log_daemon_msg "Stopping Gearman Manager"
  if start-stop-daemon \
    --stop \
    --oknodo \
    --retry 10 \
    --pidfile $PIDFILE
  then
    log_end_msg 0
  else
    log_end_msg 1
    exit 1
  fi
  kill `ps aux | egrep 'gearm[a]n-manager -P ' | awk '{ print $2 }'` 2>/dev/null
  sleep 2
  kill -KILL `ps aux | egrep 'gearm[a]n-manager -P ' | awk '{ print $2 }'` 2>/dev/null
  sleep 2
}

case "$1" in

  start)
    start
  ;;

  stop)
    stop
  ;;

  restart|force-reload)
    stop
    start
  ;;

  status)
    status_of_proc -p $PIDFILE $DAEMON "Gearman Manager"
  ;;

  *)
    echo "Usage: $0 {start|stop|restart|force-reload|status|help}"
  ;;

esac
