#!/bin/sh -e
### BEGIN INIT INFO
# Provides:          loggly integration
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Register this server with loggly.
# Description:       Makes a HTTP call (via curl) to register
#                    this server as a device on loggly.
### END INIT INFO

CUSTOMER="<%=node[:loggly][:domain]%>"
INPUT=<%=node[:loggly][:input]%>
USER="<%=node[:loggly][:user]%>"
PASS="<%=node[:loggly][:pass]%>"
MASCHINE="<%=@instance[:hostname]%>"
IP="<%=@instance[:ip]%>"

ENDPOINT="https://${CUSTOMER}.loggly.com/api/devices/"

CURL=`which curl`
CURL_OPT="-o /dev/null -L -w \"%{http_code}\" -u ${USER}:${PASS}"
CURL_OPT="${CURL_OPT} -d ip=${IP} -d input_id=${INPUT}"
CURL_OPT="${CURL_OPT} -S -s"

loggly_start () {
    local call="${CURL} -X POST ${CURL_OPT} -d name=${MASCHINE} ${ENDPOINT}"
    loggly_exec "$call"

    echo "Registered '${MASCHINE}' with '${IP}' in loggly."
}

loggly_stop () {
    ID=`/usr/local/bin/deviceid ${USER} ${PASS} ${MASCHINE} ${CUSTOMER}`
    local call="${CURL} -X DELETE ${CURL_OPT} ${ENDPOINT}${ID}"
    loggly_exec "$call"

    echo "Unregistered '${MASCHINE}' in loggly."
}

loggly_exec () {
    if [ "x$1" = "x" ]; then
        echo "Missing param."
        exit 1
    fi

    local resp=$($1)

    if [ "$?" -gt 0 ]; then
        echo "Errorz! ${resp}"
        exit 1
    fi
}

case "$1" in
    start|stop)
        loggly_$1
        ;;
    *)
        echo "Usage: $0 {start|stop}"
        exit 1
        ;;
esac

exit 0
